// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     AvaloniaReactorUI.ScaffoldApp Version: 1.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using Avalonia;
using Avalonia.Animation;
using Avalonia.Controls;
using Avalonia.Layout;

using AvaloniaReactorUI.Internals;

namespace AvaloniaReactorUI
{
    public interface IRxStyledElement : IRxAnimatable
    {
        object DataContext { get; set; }
        //string Name { get; set; }
    }

    public class RxStyledElement<T> : RxAnimatable<T>, IRxStyledElement where T : StyledElement, new()
    {
        public RxStyledElement()
        {

        }

        public RxStyledElement(Action<T> componentRefAction)
            : base(componentRefAction)
        {

        }

        public object DataContext { get; set; } = (object)StyledElement.DataContextProperty.GetDefaultValue<T>();
        //public string Name { get; set; } = (string)StyledElement.NameProperty.GetDefaultValue<T>();

        protected override void OnUpdate()
        {
            NativeControl.DataContext = DataContext;
            //NativeControl.Name = Name;

            base.OnUpdate();
        }

    }

    public class RxStyledElement : RxStyledElement<StyledElement>
    {
        public RxStyledElement()
        {

        }

        public RxStyledElement(Action<StyledElement> componentRefAction)
            : base(componentRefAction)
        {

        }
    }

    public static class RxStyledElementExtensions
    {
        public static T DataContext<T>(this T styledelement, object dataContext) where T : IRxStyledElement
        {
            styledelement.DataContext = dataContext;
            return styledelement;
        }



        //public static T Name<T>(this T styledelement, string name) where T : IRxStyledElement
        //{
        //    styledelement.Name = name;
        //    return styledelement;
        //}



    }
}
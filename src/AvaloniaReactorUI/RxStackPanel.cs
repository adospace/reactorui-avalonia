// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     AvaloniaReactorUI.ScaffoldApp Version: 1.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Input;

using Avalonia;
using Avalonia.Animation;
using Avalonia.Controls;
using Avalonia.Layout;
using Avalonia.Media;
using Avalonia.Interactivity;
using Avalonia.Input;
using Avalonia.Controls.Primitives;
using Avalonia.Controls.Templates;
using Avalonia.Platform;

using AvaloniaReactorUI.Internals;

namespace AvaloniaReactorUI
{
    public interface IRxStackPanel : IRxPanel
    {
        double Spacing { get; set; }
        Orientation Orientation { get; set; }

    }

    public partial class RxStackPanel<T> : RxPanel<T>, IRxStackPanel where T : StackPanel, new()
    {
        public RxStackPanel()
        {

        }

        public RxStackPanel(Action<T> componentRefAction)
            : base(componentRefAction)
        {

        }

        public double Spacing { get; set; } = (double)StackPanel.SpacingProperty.GetDefaultValue<T>();
        public Orientation Orientation { get; set; } = (Orientation)StackPanel.OrientationProperty.GetDefaultValue<T>();


        protected override void OnUpdate()
        {
            NativeControl.Spacing = Spacing;
            NativeControl.Orientation = Orientation;

            base.OnUpdate();
        }

        protected override void OnAttachNativeEvents()
        {

            base.OnAttachNativeEvents();
        }

        private void NativeControl_Click(object sender, RoutedEventArgs e)
        {
        }

        protected override void OnDetachNativeEvents()
        {

            base.OnDetachNativeEvents();
        }

    }
    public partial class RxStackPanel : RxStackPanel<StackPanel>
    {
        public RxStackPanel()
        {

        }

        public RxStackPanel(Action<StackPanel> componentRefAction)
            : base(componentRefAction)
        {

        }
    }
    public static partial class RxStackPanelExtensions
    {
        public static T Spacing<T>(this T stackpanel, double spacing) where T : IRxStackPanel
        {
            stackpanel.Spacing = spacing;
            return stackpanel;
        }




        public static T Orientation<T>(this T stackpanel, Orientation orientation) where T : IRxStackPanel
        {
            stackpanel.Orientation = orientation;
            return stackpanel;
        }





    }
}

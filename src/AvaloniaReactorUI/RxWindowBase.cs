// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     AvaloniaReactorUI.ScaffoldApp Version: 1.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using Avalonia;
using Avalonia.Animation;
using Avalonia.Controls;
using Avalonia.Layout;
using Avalonia.Media;
using Avalonia.Interactivity;
using Avalonia.Input;
using Avalonia.Controls.Primitives;
using Avalonia.Controls.Templates;

using AvaloniaReactorUI.Internals;

namespace AvaloniaReactorUI
{
    public interface IRxWindowBase : IRxTopLevel
    {
        bool Topmost { get; set; }
    }

    public class RxWindowBase<T> : RxTopLevel<T>, IRxWindowBase where T : WindowBase, new()
    {
        public RxWindowBase()
        {

        }

        public RxWindowBase(Action<T> componentRefAction)
            : base(componentRefAction)
        {

        }

        public bool Topmost { get; set; } = (bool)WindowBase.TopmostProperty.GetDefaultValue<T>();

        protected override void OnUpdate()
        {
            NativeControl.Topmost = Topmost;

            base.OnUpdate();
        }

    }

    public static class RxWindowBaseExtensions
    {
        public static T Topmost<T>(this T windowbase, bool topmost) where T : IRxWindowBase
        {
            windowbase.Topmost = topmost;
            return windowbase;
        }

    }
}